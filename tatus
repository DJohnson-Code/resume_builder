[1mdiff --git a/backend/models.py b/backend/models.py[m
[1mindex 975f25d..1bb97be 100644[m
[1m--- a/backend/models.py[m
[1m+++ b/backend/models.py[m
[36m@@ -131,4 +131,6 @@[m [mclass ResumeOut(BaseModel):[m
     cleaned_certifications: list[str] = Field(default_factory=list)[m
 [m
     # Warnings hold non-critical issues (e.g., unparseable dates, unknown skills)[m
[31m-    warnings: list[str] = Field(default_factory=list)[m
\ No newline at end of file[m
[32m+[m[32m    warnings: list[str] = Field(default_factory=list)[m
[32m+[m
[32m+[m[32m    model_config = {"extra": "forbid"}[m
[1mdiff --git a/backend/validations.py b/backend/validations.py[m
[1mindex 753ea3f..595f846 100644[m
[1m--- a/backend/validations.py[m
[1m+++ b/backend/validations.py[m
[36m@@ -2,6 +2,7 @@[m [mfrom __future__ import annotations[m
 from typing import Optional, Iterable, List[m
 from datetime import datetime[m
 from urllib.parse import urlparse, urlunparse, parse_qsl, urlencode[m
[32m+[m[32mfrom models import ResumeIn[m
 import re[m
 import unicodedata[m
 [m
[36m@@ -14,21 +15,14 @@[m [mdef clean_text(s: Optional[str]) -> Optional[str]:[m
         return None[m
 [m
     # Remove most emoji/symbols in supplementary planes[m
[31m-[m
     t = re.sub(r"[\U00010000-\U0010FFFF]", "", t)[m
[31m-[m
     # Normalize accents: “résumé” -> “resume”[m
[31m-[m
     t = unicodedata.normalize("NFKD", t).encode("ascii", "ignore").decode("utf-8")[m
 [m
     return t or None[m
 [m
 [m
 def title_case(s: Optional[str]) -> Optional[str]:[m
[31m-    """[m
[31m-    Conservative Title-Case for names/companies/locations.[m
[31m-    (You can later add exceptions like “McDonald”, “van”, “KC, MO”, etc.)[m
[31m-    """[m
 [m
     t = clean_text(s)[m
     return t.title() if t else t[m
[36m@@ -38,3 +32,22 @@[m [mdef clean_email(email: str) -> str:[m
 [m
     t = "".join(email.split())[m
     return t.lower() if t else t[m
[32m+[m
[32m+[m
[32m+[m[32mdef resume_warnings(res_warn: ResumeIn):[m
[32m+[m
[32m+[m[32m    warnings = [][m
[32m+[m
[32m+[m[32m    if not res_warn.education:[m
[32m+[m[32m        warnings.append("No education entries provided.")[m
[32m+[m
[32m+[m[32m    if not res_warn.experience:[m
[32m+[m[32m        warnings.append("No experience entries provided.")[m
[32m+[m
[32m+[m[32m    if not res_warn.location:[m
[32m+[m[32m        warnings.append("No location provided.")[m
[32m+[m
[32m+[m[32m    if not res_warn.urls:[m
[32m+[m[32m        warnings.append("No links or portfolios provided.")[m
[32m+[m
[32m+[m[32m    return warnings[m
[1mdiff --git a/backend/validations.py b/backend/validations.py[m
[1mindex 753ea3f..595f846 100644[m
[1m--- a/backend/validations.py[m
[1m+++ b/backend/validations.py[m
[36m@@ -2,6 +2,7 @@[m [mfrom __future__ import annotations[m
 from typing import Optional, Iterable, List[m
 from datetime import datetime[m
 from urllib.parse import urlparse, urlunparse, parse_qsl, urlencode[m
[32m+[m[32mfrom models import ResumeIn[m
 import re[m
 import unicodedata[m
 [m
[36m@@ -14,21 +15,14 @@[m [mdef clean_text(s: Optional[str]) -> Optional[str]:[m
         return None[m
 [m
     # Remove most emoji/symbols in supplementary planes[m
[31m-[m
     t = re.sub(r"[\U00010000-\U0010FFFF]", "", t)[m
[31m-[m
     # Normalize accents: “résumé” -> “resume”[m
[31m-[m
     t = unicodedata.normalize("NFKD", t).encode("ascii", "ignore").decode("utf-8")[m
 [m
     return t or None[m
 [m
 [m
 def title_case(s: Optional[str]) -> Optional[str]:[m
[31m-    """[m
[31m-    Conservative Title-Case for names/companies/locations.[m
[31m-    (You can later add exceptions like “McDonald”, “van”, “KC, MO”, etc.)[m
[31m-    """[m
 [m
     t = clean_text(s)[m
     return t.title() if t else t[m
[36m@@ -38,3 +32,22 @@[m [mdef clean_email(email: str) -> str:[m
 [m
     t = "".join(email.split())[m
     return t.lower() if t else t[m
[32m+[m
[32m+[m
[32m+[m[32mdef resume_warnings(res_warn: ResumeIn):[m
[32m+[m
[32m+[m[32m    warnings = [][m
[32m+[m
[32m+[m[32m    if not res_warn.education:[m
[32m+[m[32m        warnings.append("No education entries provided.")[m
[32m+[m
[32m+[m[32m    if not res_warn.experience:[m
[32m+[m[32m        warnings.append("No experience entries provided.")[m
[32m+[m
[32m+[m[32m    if not res_warn.location:[m
[32m+[m[32m        warnings.append("No location provided.")[m
[32m+[m
[32m+[m[32m    if not res_warn.urls:[m
[32m+[m[32m        warnings.append("No links or portfolios provided.")[m
[32m+[m
[32m+[m[32m    return warnings[m
